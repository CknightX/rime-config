# ckpinyin Rime schema
# encoding: utf-8

schema:
  schema_id: ckpinyin
  name: ck个人方案（自然码双拼）
  version: "1.0"
  author: ck
  description: 自然码+辅助码方案。
  dependencies:
    - stroke

switches:
  - name: ascii_mode
    reset: 0
    states: [ 中文, 西文 ]
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: simplification
    states: [ 漢字, 汉字 ]
  - name: ascii_punct
    states: [ 。，, ．， ]
  - name: emoji_suggestion
    reset: 1
    states: [ "🈚️️\uFE0E", "🈶️️\uFE0F" ]

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - reverse_lookup_translator
    - script_translator
    - table_translator@custom_phrase # 定义一个自定义短语子翻译器
    - table_translator
    - lua_translator@datetime_translator
    - lua_translator@calc_translator
    - lua_translator@cmd_translator
  filters:
    - simplifier@emoji_suggestion # 添加emoji支持
    - simplifier
    - uniquifier
    
speller:
  alphabet: "zyxwvutsrqponmlkjihgfedcba;"
  delimiter: "'"
  algebra:
    - derive/^(\w{2});(\w)(\w)$/$1$2$3/
    - derive/^(\w{2});(\w)(\w)$/$1$2/
    - derive/^(\w{2});(\w)(\w)$/$1/
    
    - derive/^(\w{2});(\w)(\w)$/$1;$2/
    
    - abbrev/^(.).;\w{2}$/$1/  # 声码短语输入
    - abbrev/^(\w{2});\w{2}$/$1/  # 声码短语输入

translator:
  dictionary: ckpinyin
  prism: ck_pinyin
  preedit_format: # 默认情况下显示全拼
    - xform/(?<!;)([bpmnljqxy])n/$1in/
    - xform/(?<!;)(\w)g/$1eng/
    - xform/(?<!;)(\w)q/$1iu/
    - xform/(?<!;)([gkhvuirzcs])w/$1ua/
    - xform/(?<!;)(\w)w/$1ia/
    - xform/(?<!;)([dtnlgkhjqxyvuirzcs])r/$1uan/
    - xform/(?<!;)(\w)t/$1ve/
    - xform/(?<!;)([gkhvuirzcs])y/$1uai/
    - xform/(?<!;)(\w)y/$1ing/
    - xform/(?<!;)([dtnlgkhvuirzcs])o/$1uo/
    - xform/(?<!;)(\w)p/$1un/
    - xform/(?<!;)([jqx])s/$1iong/
    - xform/(?<!;)(\w)s/$1ong/
    - xform/(?<!;)([jqxnl])d/$1iang/
    - xform/(?<!;)(\w)d/$1uang/
    - xform/(?<!;)(\w)f/$1en/
    - xform/(?<!;)(\w)h/$1ang/
    - xform/(?<!;)(\w)j/$1an/
    - xform/(?<!;)(\w)k/$1ao/
    - xform/(?<!;)(\w)l/$1ai/
    - xform/(?<!;)(\w)z/$1ei/
    - xform/(?<!;)(\w)x/$1ie/
    - xform/(?<!;)(\w)c/$1iao/
    - xform/(?<!;)([dtgkhvuirzcs])v/$1ui/
    - xform/(?<!;)(\w)b/$1ou/
    - xform/(?<!;)(\w)m/$1ian/
    - xform/(?<!;)([aoe])\1(\w)/$1$2/
    - "xform/(?<!;)(^|[ '])v/$1zh/"
    - "xform/(?<!;)(^|[ '])i/$1ch/"
    - "xform/(?<!;)(^|[ '])u/$1sh/"
    - xform/(?<!;)([jqxy])v/$1u/
    - xform/(?<!;)([nl])v/$1ü/

recognizer:
  import_preset: default
  patterns:
    punct: "^/([0-9]|[A-Za-z])*$"   # 每次输入字符都判断是否匹配该正则，不匹配则直接上屏
    expression: "^=.*$"
    reverse_lookup: "`[a-z]*'?$"


# emoji支持
emoji_suggestion:
  opencc_config: emoji.json
  option_name: emoji_suggestion
  tips: all


# 载入custom_phrase自定义短语
custom_phrase:
  dictionary: ""
  user_dict: ckpinyin.phrase
  db_class: tabledb
  enable_completion: false
  enable_sentence: false
  initial_quality: 1

# 笔画反查功能
reverse_lookup:
  dictionary: stroke
  enable_completion: true
  prefix: "`"
  suffix: "'"
  tips: 〔筆畫〕
  preedit_format:
    - xlit/hspnz/一丨丿丶乙/
  comment_format:
    - xform/([nl])v/$1ü/

# 导入符号表
punctuator:
  import_preset: ckpinyin.symbols

# 按键绑定
key_binder:
  import_preset: default

# 按键配置
ascii_composer: 
  switch_key: 
    Caps_Lock: commit_code
    Control_L: noop
    Control_R: noop
    Shift_L: commit_code
    Shift_R: inline_ascii
